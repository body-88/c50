# Generated by Django 3.1.5 on 2021-04-25 11:43

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('bywhom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bid_by_whom', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=300)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='writtenby', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Listning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('category', models.PositiveSmallIntegerField(blank=True, choices=[('1', 'Appliances'), ('2', 'Apps & Games'), ('3', 'Arts, Crafts, & Sewing'), ('4', 'Automotive Parts & Accessories'), ('5', 'Baby'), ('6', 'Beauty & Personal Care'), ('7', 'Books'), ('8', 'CDs & Vinyl'), ('9', 'Cell Phones & Accessories'), ('10', 'Clothing, Shoes and Jewelry'), ('11', 'Collectibles & Fine Art'), ('12', 'Computers'), ('13', 'Electronics'), ('14', 'Garden & Outdoor'), ('15', 'Grocery & Gourmet Food'), ('16', 'Handmade'), ('17', 'Health, Household & Baby Care'), ('18', 'Home & Kitchen'), ('19', 'Industrial & Scientific'), ('20', 'Kindle'), ('21', 'Luggage & Travel Gear'), ('22', 'Movies & TV'), ('23', 'Musical Instruments'), ('24', 'Office Products'), ('25', 'Sports & Outdoors'), ('26', 'Tools & Home Improvement'), ('27', 'Toys & Games'), ('28', 'Video Games'), ('29', 'None')], default=29)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('bid', models.ManyToManyField(blank=True, related_name='bid', to='auctions.Bid')),
                ('comments', models.ManyToManyField(blank=True, related_name='comments', to='auctions.Comment')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
